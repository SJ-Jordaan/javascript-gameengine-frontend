(()=>{"use strict";class t{constructor(t,s){this.x=t,this.y=s}distanceTo(t){return Math.sqrt(Math.pow(this.x-t.x,2)+Math.pow(this.y-t.y,2))}}class s extends PIXI.Sprite{constructor(s,i=0,e=0){super(s),this.setTransform(i,e),this.interactive=!0,this.buttonMode=!0,this.anchor.set(.5),this.on("pointerdown",this.onDragStart).on("pointerup",this.onDragEnd).on("pointerupoutside",this.onDragEnd).on("pointermove",this.onDragMove),this.vertexPoints={topLeft:new t(this.x,this.y),topRight:new t(this.x+this.getBounds().width,this.y),bottomLeft:new t(this.x,this.y+this.getBounds().height),bottomRight:new t(this.x+this.getBounds().width,this.y+this.getBounds().height)}}updateVertexPoints(){this.vertexPoints={topLeft:new t(this.x,this.y),topRight:new t(this.x+this.getBounds().width,this.y),bottomLeft:new t(this.x,this.y+this.getBounds().height),bottomRight:new t(this.x+this.getBounds().width,this.y+this.getBounds().height)}}snapToEdge(t){!0===this.parent.edgeSnap&&this.parent.children.filter((t=>t.x!==this.x&&t.y!==this.y)).forEach((s=>{Math.abs(this.getBounds().top-s.getBounds().bottom)<t&&this.x<=s.getBounds().right&&this.x>=s.getBounds().left?(this.x=s.x,this.y=s.y+s.getBounds().height):Math.abs(this.getBounds().bottom-s.getBounds().top)<t&&this.x<=s.getBounds().right&&this.x>=s.getBounds().left?(this.x=s.x,this.y+=Math.abs(this.getBounds().bottom-s.getBounds().top)):Math.abs(this.getBounds().right-s.getBounds().left)<t&&this.y<=s.getBounds().bottom&&this.y>=s.getBounds().top?(this.y=s.y,this.x+=Math.abs(this.getBounds().right-s.getBounds().left)):Math.abs(this.getBounds().left-s.getBounds().right)<t&&this.y<=s.getBounds().bottom&&this.y>=s.getBounds().top&&(this.y=s.y,this.x=s.x+s.getBounds().width)}))}snapToVertex(t){!0===this.parent.vertexSnap&&this.parent.children.filter((t=>t.x!==this.x&&t.y!==this.y)).forEach((s=>{this.vertexPoints.topLeft.distanceTo(s.vertexPoints.bottomRight)<=t?(this.x=s.x+s.getBounds().width,this.y=s.y+s.getBounds().height):this.vertexPoints.topRight.distanceTo(s.vertexPoints.bottomLeft)<=t?(this.x=s.x-this.getBounds().width,this.y=s.y+this.getBounds().height):this.vertexPoints.bottomRight.distanceTo(s.vertexPoints.topLeft)<=t?(this.x=s.x-this.getBounds().width,this.y=s.y-this.getBounds().height):this.vertexPoints.bottomLeft.distanceTo(s.vertexPoints.topRight)<=t&&(this.x=s.x+s.getBounds().width,this.y=s.y-this.getBounds().height)}))}onDragStart(t){this.data=t.data,this.alpha=.5,this.dragging=!0}onDragEnd(){this.alpha=1,this.dragging=!1,this.data=null}onDragMove(){if(this.dragging){const t=this.data.getLocalPosition(this.parent);this.x=t.x,this.y=t.y,this.updateVertexPoints(),this.snapToEdge(this.parent.snapDistance),this.snapToVertex(this.parent.snapDistance)}}}class i extends PIXI.Container{constructor(t,s){super(),this.width=t,this.height=s,this.edgeSnap=!0,this.vertexSnap=!0,this.snapDistance=20}addEntity(t){this.addChild(t)}enableEdgeSnap(){this.edgeSnap=!0}disableEdgeSnap(){this.edgeSnap=!1}}const e=new class{constructor(t=800,s=600){this.app=new PIXI.Application({width:t,height:s,backgroundColor:11184810,resolution:window.devicePixelRatio||1,autoResize:!0}),this.scene=new i(800,600)}init(){document.getElementById("engine-view").appendChild(this.app.view),this.app.stage.addChild(this.scene)}loadAsset(t,s){return this.app.loader.add(t,s),this.app.loader}addToScene(t){this.scene.addEntity(t)}static gameLoop(t){console.log(t)}};e.init(),e.loadAsset("tile","/public/images/tile.png").load(((t,i)=>{const h=i.tile.texture,n=new s(h,0,0);e.scene.addEntity(n);const o=new s(h,150,300);e.scene.addEntity(o);const d=new s(h,300,150);e.scene.addEntity(d);const a=new s(h,250,20);e.scene.addEntity(a);const g=new s(h,500,220);e.scene.addEntity(g);const r=new s(h,430,120);e.scene.addEntity(r)}))})();