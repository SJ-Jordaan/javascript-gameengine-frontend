(()=>{"use strict";class t{constructor(t,e){this.x=t,this.y=e,this.distanceTo=this.distanceTo.bind(this)}distanceTo(t){return Math.sqrt(Math.pow(this.x-t.x,2)+Math.pow(this.y-t.y,2))}}const e={character:"character",surface:"surface",background:"background"};Object.freeze(e);class s extends PIXI.Sprite{constructor(s,i){super(s),this.name=i.toLowerCase(),this.interactive=!0,this.buttonMode=!0,this.type=e.surface,this.anchor.set(.5),this.vertexPoints={topLeft:new t(this.x,this.y),topRight:new t(this.x+this.getBounds().width,this.y),bottomLeft:new t(this.x,this.y+this.getBounds().height),bottomRight:new t(this.x+this.getBounds().width,this.y+this.getBounds().height)},this.on("pointerdown",this.onDragStart).on("pointerup",this.onDragEnd).on("pointerupoutside",this.onDragEnd).on("pointermove",this.onDragMove),this.onDragStart=this.onDragStart.bind(this),this.onDragEnd=this.onDragEnd.bind(this),this.onDragMove=this.onDragMove.bind(this),this.updateVertexPoints=this.updateVertexPoints.bind(this),this.snapToEdge=this.snapToEdge.bind(this),this.snapToVertex=this.snapToVertex.bind(this),this.getSiblings=this.getSiblings.bind(this)}updateVertexPoints(){this.vertexPoints={topLeft:new t(this.x,this.y),topRight:new t(this.x+this.getBounds().width,this.y),bottomLeft:new t(this.x,this.y+this.getBounds().height),bottomRight:new t(this.x+this.getBounds().width,this.y+this.getBounds().height)}}snapToEdge(t){"design"===this.parent.mode&&!0===this.parent.edgeSnap&&this.parent.children.filter((t=>t.x!==this.x&&t.y!==this.y)).forEach((s=>{s.type===e.surface&&(Math.abs(this.getBounds().top-s.getBounds().bottom)<t&&this.x<=s.getBounds().right&&this.x>=s.getBounds().left?(this.x=s.x,this.y=s.y+s.getBounds().height):Math.abs(this.getBounds().bottom-s.getBounds().top)<t&&this.x<=s.getBounds().right&&this.x>=s.getBounds().left?(this.x=s.x,this.y+=Math.abs(this.getBounds().bottom-s.getBounds().top)):Math.abs(this.getBounds().right-s.getBounds().left)<t&&this.y<=s.getBounds().bottom&&this.y>=s.getBounds().top?(this.y=s.y,this.x+=Math.abs(this.getBounds().right-s.getBounds().left)):Math.abs(this.getBounds().left-s.getBounds().right)<t&&this.y<=s.getBounds().bottom&&this.y>=s.getBounds().top&&(this.y=s.y,this.x=s.x+s.getBounds().width))}))}snapToVertex(t){"design"===this.parent.mode&&!0===this.parent.vertexSnap&&this.parent.children.filter((t=>t.x!==this.x&&t.y!==this.y)).forEach((s=>{s.type!==e.surface&&(this.vertexPoints.topLeft.distanceTo(s.vertexPoints.bottomRight)<=t?(this.x=s.x+s.getBounds().width,this.y=s.y+s.getBounds().height):this.vertexPoints.topRight.distanceTo(s.vertexPoints.bottomLeft)<=t?(this.x=s.x-this.getBounds().width,this.y=s.y+this.getBounds().height):this.vertexPoints.bottomRight.distanceTo(s.vertexPoints.topLeft)<=t?(this.x=s.x-this.getBounds().width,this.y=s.y-this.getBounds().height):this.vertexPoints.bottomLeft.distanceTo(s.vertexPoints.topRight)<=t&&(this.x=s.x+s.getBounds().width,this.y=s.y-this.getBounds().height))}))}setEntityType(t){this.type=e[t]}getSiblings(){return this.parent.children.filter((t=>t.name!==this.name))}transformX(t){this.x+=t,this.updateVertexPoints()}transformY(t){this.y+=t,this.updateVertexPoints()}transform(t,e){this.transformX(t),this.transformY(e)}onDragStart(t){this.data=t.data,this.alpha=.5,this.dragging=!0,this.offX=this.x-this.data.getLocalPosition(this.parent).x,this.offY=this.y-this.data.getLocalPosition(this.parent).y}onDragEnd(){this.alpha=1,this.dragging=!1,this.data=null}onDragMove(){if(this.dragging){const t=this.data.getLocalPosition(this.parent);this.x=t.x+this.offX,this.y=t.y+this.offY,this.updateVertexPoints(),this.snapToEdge(this.parent.snapDistance),this.snapToVertex(this.parent.snapDistance)}}}class i extends s{constructor(t,s,i=0,n=0){super(t,s),this.setTransform(i,n),this.anchor.set(.5),this.type=e.character,this.mass=0,this.acceleration=0,this.onSurface=this.onSurface.bind(this)}onSurface(){let t=!1;this.type===e.surface&&(t=!0);let s=this.getSiblings(),i=0;return s.forEach((s=>{s.type===e.surface&&function(t,e){const s=t.getBounds(),i=e.getBounds();return s.x<i.x+i.width&&s.x+s.width>i.x&&s.y<i.y+i.height&&s.y+s.height>i.y}(this,s)&&(i=s.y-(this.y+this.height),Math.abs(i)>4&&(this.y+=i),t=!0)})),t}}class n extends PIXI.Container{constructor(t,e,s){super(),this.name=t,this.width=e,this.height=s,this.edgeSnap=!0,this.vertexSnap=!0,this.snapDistance=20,this.gravity=8,this.enableVertexSnap=this.enableVertexSnap.bind(this),this.disableVertexSnap=this.disableVertexSnap.bind(this),this.enableEdgeSnap=this.enableEdgeSnap.bind(this),this.disableEdgeSnap=this.disableEdgeSnap.bind(this),this.setGravity=this.setGravity.bind(this)}enableEdgeSnap(){this.edgeSnap=!0}disableEdgeSnap(){this.edgeSnap=!1}enableVertexSnap(){this.vertexSnap=!0}disableVertexSnap(){this.vertexSnap=!1}setGravity(t){this.gravity=t}}const h={design:"design",play:"play",paused:"Paused"};Object.freeze(h);class a{constructor(t){this.name=t,this.TextureCache=PIXI.utils.TextureCache,this.scenes=[],this.currentSceneIndex=0,this.mode=h.design,this.addBackground=this.addBackground.bind(this),this.play=this.play.bind(this),this.init=this.init.bind(this),this.stop=this.stop.bind(this),this.update=this.update.bind(this)}init(t,e){let s=new n("gameScene",t,e);s.mode=this.mode,s.visible=!0,this.scenes.push(s)}setGameMode(t){this.mode=h[t],this.scenes[this.currentSceneIndex].mode=this.mode}addBackground(t){if(null!=t){let e=new s(t);this.scenes[this.currentSceneIndex].addChild(e)}}play(t){this.update(t)}stop(){}update(t){this.scenes[this.currentSceneIndex].children.forEach((e=>{e instanceof i&&(e.transformX(1),function(t,e){!1===t.onSurface()&&t.y+t.width/2<t.parent._height&&(t.y=t.y+.5*t.parent.gravity*Math.pow(e,2))}(e,t))}))}}const d={designing:"Designing",playing:"Playing",paused:"Paused"};Object.freeze(d),(new class{constructor(){this.loader=new PIXI.Loader,this.stage=new PIXI.Container,this.currentGameIndex=0,this.games=[],this.currentMode=d.designing,this.init=this.init.bind(this),this.loadTexturesFromLocal=this.loadTexturesFromLocal.bind(this),this.createGame=this.createGame.bind(this),this.loadDefaultAssets=this.loadDefaultAssets.bind(this),this.createGameEntity=this.createGameEntity.bind(this),this.addTestObjects=this.addTestObjects.bind(this),this.render=this.render.bind(this),this.playGame=this.playGame.bind(this),this.stopGame=this.stopGame.bind(this)}addTestObjects(){const t=new s(PIXI.utils.TextureCache.redTile,"red");t.x=20,t.y=20,this.games[this.currentGameIndex].scenes[0].addChild(t);const e=new s(PIXI.utils.TextureCache.blackTile,"black");e.x=20,e.y=20,this.games[this.currentGameIndex].scenes[0].addChild(e);const i=new s(PIXI.utils.TextureCache.yellowTile,"yellow");i.x=20,i.y=20,this.games[this.currentGameIndex].scenes[0].addChild(i);const n=new s(PIXI.utils.TextureCache.brownTile,"brown");n.x=20,n.y=20,this.games[this.currentGameIndex].scenes[0].addChild(n);const h=new s(PIXI.utils.TextureCache.greenTile,"green");h.x=20,h.y=20,this.games[this.currentGameIndex].scenes[0].addChild(h)}init(){const t=PIXI.autoDetectRenderer({antalias:!0,autoDensity:!0,resolution:window.devicePixelRatio||1,width:900,height:600});this.renderer=t,document.getElementById("engine-view").appendChild(t.view),document.querySelector("#upload-button").addEventListener("change",this.loadTexturesFromLocal,!1),document.querySelector("#create-sprite-button").addEventListener("click",this.createGameEntity,!1),document.querySelector("#play-button").addEventListener("click",this.playGame,!1),document.querySelector("#stop-button").addEventListener("click",this.stopGame,!1),this.loader.baseUrl="/public/assets/",this.loadDefaultAssets(),this.createGame("Test Game"),this.games[this.currentGameIndex].scenes.forEach((t=>{this.stage.addChild(t)})),PIXI.Ticker.shared.add(this.render)}render(t){this.renderer.clear(),"play"===this.games[this.currentGameIndex].mode&&this.games[this.currentGameIndex].play(t),this.renderer.render(this.stage)}loadDefaultAssets(){this.loader.add("blueTile","images/blueTile.png").add("brownTile","images/brownTile.png").add("blackTile","images/blackTile.png").add("greenTile","images/greenTile.png").add("yellowTile","images/yellowTile.png").add("redTile","images/redTile.png").add("whiteTile","images/whiteTile.png").add("orangeTile","images/orangeTile.png").add("background","images/background.jpg"),this.loader.onComplete.add(this.addTestObjects),this.loader.load()}loadTexturesFromLocal(t){let e=t.target,s=e.files;for(let t=0;t<s.length;t++){let s=new FileReader;s.onload=()=>{const i=new Image;i.src=s.result;let n=new PIXI.BaseTexture(i.src);PIXI.Texture.addToCache(n,e.files[t].name)},s.readAsDataURL(e.files[t])}}createGame(t){let e=new a(t);e.init(this.renderer.view.width,this.renderer.view.height),this.games.push(e)}deleteGame(t){}saveGame(){}createGameEntity(){const t=this.games[this.currentGameIndex].scenes[0].children.length,e=new i(PIXI.utils.TextureCache.blueTile,"untitled"+t);e.x=this.renderer.screen.width/2,e.y=this.renderer.screen.height/2,this.games[this.currentGameIndex].scenes[0].addChild(e)}playGame(){this.games[this.currentGameIndex].setGameMode("play")}stopGame(){this.games[this.currentGameIndex].setGameMode("design")}}).init()})();