(()=>{"use strict";class e{constructor(e,t){this.x=e,this.y=t,this.distanceTo=this.distanceTo.bind(this)}distanceTo(e){return Math.sqrt(Math.pow(this.x-e.x,2)+Math.pow(this.y-e.y,2))}}const t={character:"character",surface:"surface",background:"background"};Object.freeze(t);class i extends PIXI.Sprite{constructor(i,s){super(i),this.name=s.toLowerCase(),this.interactive=!0,this.buttonMode=!0,this.type=t.surface,this.anchor.set(.5),this.vertexPoints={topLeft:new e(this.x,this.y),topRight:new e(this.x+this.getBounds().width,this.y),bottomLeft:new e(this.x,this.y+this.getBounds().height),bottomRight:new e(this.x+this.getBounds().width,this.y+this.getBounds().height)},this.on("pointerdown",this.onDragStart).on("pointerup",this.onDragEnd).on("pointerupoutside",this.onDragEnd).on("pointermove",this.onDragMove),this.onDragStart=this.onDragStart.bind(this),this.onDragEnd=this.onDragEnd.bind(this),this.onDragMove=this.onDragMove.bind(this),this.updateVertexPoints=this.updateVertexPoints.bind(this),this.snapToEdge=this.snapToEdge.bind(this),this.snapToVertex=this.snapToVertex.bind(this),this.getSiblings=this.getSiblings.bind(this)}updateVertexPoints(){this.vertexPoints={topLeft:new e(this.x,this.y),topRight:new e(this.x+this.getBounds().width,this.y),bottomLeft:new e(this.x,this.y+this.getBounds().height),bottomRight:new e(this.x+this.getBounds().width,this.y+this.getBounds().height)}}snapToEdge(e){"design"===this.parent.mode&&!0===this.parent.edgeSnap&&this.parent.children.filter((e=>e.x!==this.x&&e.y!==this.y)).forEach((i=>{i.type!==t.background&&(Math.abs(this.getBounds().top-i.getBounds().bottom)<e&&this.x<=i.getBounds().right&&this.x>=i.getBounds().left?(this.x=i.x,this.y=i.y+i.getBounds().height):Math.abs(this.getBounds().bottom-i.getBounds().top)<e&&this.x<=i.getBounds().right&&this.x>=i.getBounds().left?(this.x=i.x,this.y+=Math.abs(this.getBounds().bottom-i.getBounds().top)):Math.abs(this.getBounds().right-i.getBounds().left)<e&&this.y<=i.getBounds().bottom&&this.y>=i.getBounds().top?(this.y=i.y,this.x+=Math.abs(this.getBounds().right-i.getBounds().left)):Math.abs(this.getBounds().left-i.getBounds().right)<e&&this.y<=i.getBounds().bottom&&this.y>=i.getBounds().top&&(this.y=i.y,this.x=i.x+i.getBounds().width))}))}snapToVertex(e){"design"===this.parent.mode&&!0===this.parent.vertexSnap&&this.parent.children.filter((e=>e.x!==this.x&&e.y!==this.y)).forEach((i=>{i.type!==t.background&&(this.vertexPoints.topLeft.distanceTo(i.vertexPoints.bottomRight)<=e?(this.x=i.x+i.getBounds().width,this.y=i.y+i.getBounds().height):this.vertexPoints.topRight.distanceTo(i.vertexPoints.bottomLeft)<=e?(this.x=i.x-this.getBounds().width,this.y=i.y+this.getBounds().height):this.vertexPoints.bottomRight.distanceTo(i.vertexPoints.topLeft)<=e?(this.x=i.x-this.getBounds().width,this.y=i.y-this.getBounds().height):this.vertexPoints.bottomLeft.distanceTo(i.vertexPoints.topRight)<=e&&(this.x=i.x+i.getBounds().width,this.y=i.y-this.getBounds().height))}))}setEntityType(e){this.type=t[e]}getSiblings(){return this.parent.children.filter((e=>e.name!==this.name))}moveX(e){this.x+=e,this.updateVertexPoints()}moveY(e){this.y+=e,this.updateVertexPoints()}translateEntity(e,t){this.setTransform(e,t),this.updateVertexPoints()}rotateEntity(e){this.setTransform(this.position.x,this.position.y,this.scale.x,this.scale.y,e),this.setTransform(this.position.x,this.position.y,this.scale.x,this.scale.y,e)}scaleEntity(e,t){this.setTransform(this.position.x,this.position.y,e,t,this.rotation)}rotateEntity(e){this.setTransform(this.position.x,this.position.y,this.scale.x,this.scale.y,e),this.setTransform(this.position.x,this.position.y,this.scale.x,this.scale.y,e)}scaleEntity(e,t){this.setTransform(this.position.x,this.position.y,e,t,this.rotation)}onDragStart(e){this.parent.setSelectedEntityName(this.name),this.data=e.data,this.alpha=.5,this.dragging=!0,this.offX=this.x-this.data.getLocalPosition(this.parent).x,this.offY=this.y-this.data.getLocalPosition(this.parent).y}onDragEnd(){this.parent.setSelectedEntityName(this.name),this.alpha=1,this.dragging=!1,this.data=null}onDragMove(){if(this.dragging){const e=this.data.getLocalPosition(this.parent);this.x=e.x+this.offX,this.y=e.y+this.offY,this.updateVertexPoints(),this.snapToEdge(this.parent.snapDistance),this.snapToVertex(this.parent.snapDistance)}}}class s extends i{constructor(e,i,s=0,n=0){super(e,i),this.setTransform(s,n),this.anchor.set(.5),this.type=t.character,this.mass=0,this.acceleration=0,this.onSurface=this.onSurface.bind(this)}onSurface(){let e=!1;return this.type===t.surface&&(e=!0),this.getSiblings().forEach((i=>{i.type===t.surface&&function(e,t){const i=e.getBounds(),s=t.getBounds();return i.x<s.x+s.width&&i.x+i.width>s.x&&i.y<s.y+s.height&&i.y+i.height>s.y}(this,i)&&(e=!0)})),e}}class n extends PIXI.Container{constructor(e,t,i){super(),this.name=e,this.width=t,this.height=i,this.edgeSnap=!0,this.vertexSnap=!0,this.snapDistance=20,this.gravity=8,this.selectedEntityName,this.entitySelectedEvent=new CustomEvent("entityChanged",{detail:{changed:!0}})}enableEdgeSnap(){this.edgeSnap=!0}disableEdgeSnap(){this.edgeSnap=!1}enableVertexSnap(){this.vertexSnap=!0}disableVertexSnap(){this.vertexSnap=!1}setGravity(e){this.gravity=e}addChild(e){super.addChild(e),window.dispatchEvent(this.entitySelectedEvent)}setSelectedEntityName(e){window.dispatchEvent(this.entitySelectedEvent),this.selectedEntityName=e}getSelectedEntity(){return this.children.find((e=>e.name==this.selectedEntityName))}getEntityChangeEvent(){this.entitySelectedEvent}}const r={design:"design",play:"play",paused:"Paused"};Object.freeze(r);class a{constructor(e){this.name=e,this.TextureCache=PIXI.utils.TextureCache,this.scenes=[],this.currentSceneIndex=0,this.mode=r.design}init(e,t,i){let s=new n(i,e,t);s.mode=this.mode,s.visible=!0,this.scenes.push(s)}getSceneAtIndex(e){if("number"==typeof e&&e<this.scenes.length)return this.scenes[e]}setCurrentSceneIndex(e){"number"==typeof e&&e<this.scenes.length&&(this.currentSceneIndex=e)}getSceneIndex(e){console.log("TOTAL SCENES: "+this.scenes.length.toString());const t=this.scenes.findIndex((t=>{if(t.name===e)return!0}));if(t>-1)return t}getCurrentScene(){return this.scenes[this.currentSceneIndex]}setGameMode(e){this.mode=r[e],this.scenes[this.currentSceneIndex].mode=this.mode}addBackground(e){if(null!=e){let t=new i(e);this.scenes[this.currentSceneIndex].addChild(t)}}play(e){this.update(e)}stop(){}update(e){this.scenes[this.currentSceneIndex].children.forEach((t=>{t instanceof s&&(t.moveX(1),function(e,t){!1===e.onSurface()&&e.y+e.width/2<e.parent._height&&(e.y=e.y+.5*e.parent.gravity*Math.pow(t,2))}(t,e))}))}getCurrentSelectedEntity(){const e=this.scenes[0].children.findIndex((e=>{if(e.name===this.scenes[0].selectedEntityName)return!0}));if(e>-1)return this.scenes[this.currentSceneIndex].children[e]}}const o={MOUSE:{UP:"mouseup",DOWN:"mousedown",CLICK:"click",DOUBLECLICK:"dblclick"},KEYBOARD:{KEYDOWN:"keydown",KEYPRESS:"keypress",KEYUP:"keyup"},FORM:{FOCUS:"focus",BLUR:"blur",CHANGE:"change",SUBMIT:"submit"},WINDOW:{SCROLL:"scroll",RESIZE:"resize",HASHCHANGE:"hashchange",LOAD:"load",UNLOAD:"unload"}};Object.freeze(o);const d=o;class h{constructor(){}set title(e){if("string"!=typeof e)throw TypeError("Provided Title is not of type String");this._title=e}get title(){return this._title}set bodyText(e){if("string"!=typeof e)throw TypeError("Provided Body Text is not of type String");this._bodyText=e}set buttons(e){Array.isArray(e)&&e.forEach((e=>{if(!(e instanceof c))throw TypeError("Provided Array should have elements of type Button")})),this._buttons=e}set image(e){if("string"!=typeof e)throw TypeError("Provided Image is not of type String");this._image=e}set header(e){if("string"!=typeof e)throw TypeError("Provided Header Text is not of type String");this._header=e}set center(e){if("boolean"!=typeof e)throw TypeError("Provided Center is not of type Boolean");this._center=e}set colour(e){if(!(e instanceof l))throw TypeError("Provided Colour is not of type Colour");this._colour=e}set whiteText(e){if("boolean"!=typeof e)throw TypeError("Provided White Text Value is not of type Boolean");this._whiteText=e}get bodyText(){return this._bodyText}get buttons(){return this._buttons}get image(){return this._image}get header(){return this._header}get center(){return this._center}get colour(){return this._colour}get whiteText(){return this._whiteText}}class c{constructor(e,t,i,s,n){this.title=e,this.id=t,this.action=i,this.colour=s,this.fontSize=n}}class l{constructor(e,t,i,s){if("number"!=typeof e||"number"!=typeof t||"number"!=typeof i||"number"!=typeof s)throw new"Provided Colour is not of type Number";this.red=e,this.green=t,this.blue=i,this.alpha=s}colourToString(){return`rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`}}var m={Primary:new l(2,117,216,1),Secodnary:new l(92,184,92,1),Dark:new l(41,43,44,1),Danger:new l(217,83,79,1),Light:new l(247,247,247,1)},u={Small:"10px",Smaller:"12px",Medium:"16px",Larger:"20px",Large:"24px"};Object.freeze(m),Object.freeze(u);Object.freeze({JSON:"json",XML:"xml"});const g={GET:"GET",POST:"POST",DELETE:"DELETE",PUT:"PUT"};Object.freeze(g);const y=g,p=class{constructor(e,t){if(!window.indexedDB)throw new Error("Browser does not support a stable version of IndexedDB");this.iDBRequest=window.indexedDB(e,1),this.dbName=e,this.storeKey=storekey,this.db,this.iDBRequest.onupgradeneeded=e=>{this.iDBRequest.result,e.target.result.createObjectStore(this.dbName)},this.iDBRequest.onsuccess=e=>{this.db=e.target.result,this.restore()},this.results=void 0}restore(){var e=this.db.transaction(this.dbName).objectStore(this.dbName).get(this.storekey);e.onerror=t=>{console.log(this.dbName+": error reading from database, "+e.error.name)},e.onsuccess=t=>{e.result?this.results=e.result:console.log(this.dbName+": no saved game for "+this.storekey)}}save(e){new Promise(((t,i)=>{this.db||i("Db not initialized");var s=this.db.transaction(this.dbName,"readwrite").objectStore(this.dbName).put(e,this.storekey);s.onerror=e=>{console.log(this.dbName+": error writing to database, "+s.error.name)},s.onsuccess=e=>{t(!0)}}))}},f={designing:"Designing",playing:"Playing",paused:"Paused"};Object.freeze(f),(new class{constructor(){this.loader=new PIXI.Loader,this.stage=new PIXI.Container,this.currentGameIndex=0,this.games=[],this._entityContainerId="entities",this._entities=document.getElementById(this._entityContainerId),this._posForm=document.getElementById("positionForm"),this._rotForm=document.getElementById("rotationForm"),this._scaleForm=document.getElementById("scaleForm"),this._scenesList=document.getElementById("activeScene"),this._changeSceneForm=document.getElementById("changeSceneForm"),this._createSceneForm=document.getElementById("createSceneForm"),this._entityType=document.getElementById("entityType"),this._entityName=document.getElementById("entityName"),this.currentMode=f.designing,this._gameID=sessionStorage.getItem("game"),this._iDBName="LameEngine2d",this._dbStoreKey="GameState",this.init=this.init.bind(this),this.loadTexturesFromLocal=this.loadTexturesFromLocal.bind(this),this.loadTextureToWorkspace=this.loadTextureToWorkspace.bind(this),this.bulkUploadTexturesToWorkspace=this.bulkUploadTexturesToWorkspace.bind(this),this.createGame=this.createGame.bind(this),this.loadDefaultAssets=this.loadDefaultAssets.bind(this),this.createGameEntity=this.createGameEntity.bind(this),this.render=this.render.bind(this),this.playGame=this.playGame.bind(this),this.stopGame=this.stopGame.bind(this),this.translateEntityHandler=this.translateEntityHandler.bind(this),this.scaleEntityHandler=this.scaleEntityHandler.bind(this),this.rotateEntityHandler=this.rotateEntityHandler.bind(this),this.entityTransformedHandler=this.entityTransformedHandler.bind(this)}translateEntityHandler(e){e.preventDefault();const t=new FormData(e.target),i={};for(let e of t.entries())i[e[0]]=e[1];this.games[this.currentGameIndex].getCurrentSelectedEntity().translateEntity(parseFloat(i.x),parseFloat(i.y))}rotateEntityHandler(e){e.preventDefault();const t=new FormData(e.target),i={};for(let e of t.entries())i[e[0]]=e[1];this.games[this.currentGameIndex].getCurrentSelectedEntity().rotateEntity(parseFloat(i.degrees))}scaleEntityHandler(e){e.preventDefault();const t=new FormData(e.target),i={};for(let e of t.entries())i[e[0]]=e[1];this.games[this.currentGameIndex].getCurrentSelectedEntity().scaleEntity(parseFloat(i.x),parseFloat(i.y))}entityTransformedHandler(){const e=this.games[this.currentGameIndex].getCurrentSelectedEntity();e&&(document.getElementById("xPosition").value=e.transform.position.x.toFixed(2),document.getElementById("yPosition").value=e.transform.position.y.toFixed(2),document.getElementById("xScale").value=e.transform.scale.x.toFixed(2),document.getElementById("yScale").value=e.transform.scale.y.toFixed(2),document.getElementById("rotationDeg").value=e.transform.rotation.toFixed(2),this._entityName.innerHTML=e.name)}degrees_to_radians(e){return e*(Math.PI/180)}setupEventListeners(){document.querySelector("#play-button").addEventListener("click",this.playGame,!1),document.querySelector("#stop-button").addEventListener("click",this.stopGame,!1),this._entityContainerId="entities",this._entities=document.getElementById(this._entityContainerId),this._positionForm=document.getElementById("positionForm"),this._rotationForm=document.getElementById("rotationForm"),this._scaleForm=document.getElementById("scaleForm"),window.addEventListener("entityChanged",this.entityTransformedHandler),this._positionForm.addEventListener(d.FORM.SUBMIT,this.translateEntityHandler),this._rotationForm.addEventListener(d.FORM.SUBMIT,this.rotateEntityHandler),this._scaleForm.addEventListener(d.FORM.SUBMIT,this.scaleEntityHandler)}addScenes(){this._scenesList&&(this._scenesList.innerHTML="",this.games[this.currentGameIndex].scenes.forEach((e=>{let t=document.createElement("option");t.text=e.name,t.value=e.name,this._scenesList.add(t)})))}changeScene(){this._changeSceneForm.addEventListener(d.FORM.SUBMIT,(e=>{e.preventDefault();const t=new FormData(e.target),i={};for(let e of t.entries())i[e[0]]=e[1];if(i){const e=this.games[this.currentGameIndex].getSceneIndex(i.activeScene);console.log("INDEX: "+e.toString()),e>-1&&(console.log(i),this.games[this.currentGameIndex].currentSceneIndex=e,this.games[this.currentGameIndex].scenes.forEach((t=>{console.log(t.name),this.games[this.currentGameIndex].getSceneIndex(t.name)!==e?t.visible=!1:t.visible=!0})))}}))}createScene(){this._createSceneForm.addEventListener(d.FORM.SUBMIT,(e=>{e.preventDefault();const t=new FormData(e.target),i={};for(let e of t.entries())i[e[0]]=e[1];if(i){const e=!1;if(i.sceneGravity?!i.sceneHeight&&parseFloat(i.sceneHeight)>0||!i.sceneWidth&&parseFloat(i.sceneWidth)>0?e=!0:i.sceneName||(this.games[this.currentGameIndex].getSceneIndex(i.sceneName)>-1&&(e=!0),e=!0):e=!0,e)return void alert("Failed to create a new Scene, inccorect parameters provided");this.games[this.currentGameIndex].init(i.sceneWidth,i.sceneHeight,i.sceneName),this.stage.addChild(this.games[this.currentGameIndex].getSceneAtIndex(this.games[this.currentGameIndex].getSceneIndex(i.sceneName))),this.addScenes(),confirm(`Scene ${i.sceneName} created Succesfully!`)}}))}initializeScenes(){this.addScenes(),this.changeScene(),this.createScene()}initializeEntitySettings(){const e=this.games[this.currentGameIndex].getCurrentScene();window.addEventListener("entityChanged",(t=>{if(e){const t=e.children.findIndex((t=>{if(t.name===e.selectedEntityName)return!0}));t>-1&&(document.getElementById("xPosition").value=e.children[t].transform.position.x.toFixed(2),document.getElementById("yPosition").value=e.children[t].transform.position.y.toFixed(2),document.getElementById("xScale").value=e.children[t].transform.scale.x.toFixed(2),document.getElementById("yScale").value=e.children[t].transform.scale.y.toFixed(2),document.getElementById("rotationDeg").value=e.children[t].transform.rotation.toFixed(2))}})),this._posForm.addEventListener(d.FORM.SUBMIT,(t=>{t.preventDefault();const i=new FormData(t.target),s={};for(let e of i.entries())s[e[0]]=e[1];if(i||alert("Invalid form submitted"),e){const t=e.children.findIndex((t=>{if(t.name===e.selectedEntityName)return!0}));t>-1&&e.children[t].transformEntity(parseFloat(s.x),parseFloat(s.y))}})),this._rotForm.addEventListener(d.FORM.SUBMIT,(t=>{t.preventDefault();const i=new FormData(t.target),s={};for(let e of i.entries())s[e[0]]=e[1];if(i||alert("Invalid form submitted"),e){const t=e.children.findIndex((t=>{if(t.name===e.selectedEntityName)return!0}));t>-1&&e.children[t].rotateEntity(this.degrees_to_radians(parseFloat(s.degrees)))}})),this._scaleForm.addEventListener(d.FORM.SUBMIT,(t=>{t.preventDefault();const i=new FormData(t.target),s={};for(let e of i.entries())s[e[0]]=e[1];if(i||alert("Invalid form submitted"),e){const t=e.children.findIndex((t=>{if(t.name===e.selectedEntityName)return!0}));t>-1&&e.children[t].scaleEntity(parseFloat(s.x),parseFloat(s.y))}}))}degrees_to_radians(e){return e*(Math.PI/180)}init(){const e=PIXI.autoDetectRenderer({antalias:!0,autoDensity:!0,resolution:window.devicePixelRatio||1,width:1e3,height:700});this.renderer=e,document.getElementById("engine-view").appendChild(e.view),this.setupEventListeners(),this.loader.baseUrl="/public/assets/",this.loadDefaultAssets(),this.createGame("Test Game"),this.games[this.currentGameIndex].scenes.forEach((e=>{this.stage.addChild(e)})),this.initializeEntitySettings(),this.initializeScenes(),PIXI.Ticker.shared.add(this.render)}render(e){this.renderer.clear(),"play"===this.games[this.currentGameIndex].mode&&this.games[this.currentGameIndex].play(e),this.renderer.render(this.stage)}loadDefaultAssets(){this.loader.add("blueTile","images/blueTile.png").add("brownTile","images/brownTile.png").add("blackTile","images/blackTile.png").add("greenTile","images/greenTile.png").add("yellowTile","images/yellowTile.png").add("redTile","images/redTile.png").add("whiteTile","images/whiteTile.png").add("orangeTile","images/orangeTile.png").add("background","images/background.jpg"),this.loader.onComplete.add(this.bulkUploadTexturesToWorkspace),this.loader.load()}bulkUploadTexturesToWorkspace(e,t){for(var i in t){let e=t[i],s=e.name,n=e.url;this.loadTextureToWorkspace(s,n)}}loadTextureToWorkspace(e,t){const i=new class{constructor(){var e=document.head,t=document.createElement("link");e.innerHTML.indexOf("dynamic-card.css")<=-1&&(t.type="text/css",t.rel="stylesheet",t.href="/public/scripts/view-components/cards/styling/dynamic-card.css",e.appendChild(t))}createInlineCard(e){if(!(e instanceof h))throw new TypeError("Provided Card is not of type Card");const t=document.createElement("section");if(t.id="inline-card-object",t.classList.add("dynamic-inline-card"),e.colour&&(t.style.backgroundColor=e.colour.colourToString()),e.image){const i=document.createElement("img");i.id="inline-card-image",i.src=e.image,t.appendChild(i)}const i=document.createElement("div");if(i.id="inline-card-content",i.classList.add("dynamic-inline-card-content"),e.title){const t=document.createElement("a");t.id="card-body-title",t.innerHTML=e.title,i.appendChild(t)}return e.buttons&&Array.isArray(e.buttons)&&e.buttons.forEach((e=>{const t=document.createElement("button");t.onclick=e.action,t.innerHTML=e.title,t.id=e.id,t.classList.add("dynamic-card-button-sm"),t.style.backgroundColor=e.colour.colourToString(),t.style.fontSize=e.fontSize,t.style.marginLeft="auto",i.appendChild(t)})),t.appendChild(i),t}createGenericCard(e){if(!(e instanceof h))throw new TypeError("Provided Card is not of type Card");const t=document.createElement("section");if(t.id="card-object",t.classList.add("dynamic-card"),e.colour&&(t.style.backgroundColor=e.colour.colourToString()),e.image){const i=document.createElement("img");i.classList.add("dynamic-card-image"),i.id="card-image",i.src=e.image,t.appendChild(i)}if(e.header){const i=document.createElement("div");i.id="card-body-header",i.classList.add("dynamic-card-header"),i.innerHTML=e.header,e.center&&(i.style.textAlign="center"),e.whiteText&&(i.style.color=m.Light.colourToString()),t.appendChild(i)}const i=document.createElement("div");if(i.classList.add("dynamic-card-container"),e.title){const t=document.createElement("h3");t.id="card-body-title",t.innerHTML=e.title,t.classList.add("dynamic-card-title"),e.center&&(t.style.textAlign="center"),e.whiteText&&(t.style.color=m.Light.colourToString()),i.appendChild(t)}if(e.bodyText||e.buttons&&Array.isArray(e.buttons)){if(e.bodyText){const t=document.createElement("p");t.id="card-body-text",t.innerText=e.bodyText,t.classList.add("dynamic-card-text"),e.center&&(t.style.textAlign="center"),e.whiteText&&(t.style.color=m.Light.colourToString()),i.appendChild(t)}e.buttons&&Array.isArray(e.buttons)&&e.buttons.length>0&&i.appendChild(this.createButtonContainer(e.buttons,e.center))}if(t.appendChild(i),e.footer){const i=document.createElement("div");i.id="card-body-footer",i.classList.add("dynamic-card-footer"),i.innerHTML=e.footer,e.center&&(i.style.textAlign="center"),e.whiteText&&(i.style.color=m.Light.colourToString()),t.appendChild(i)}return t}createButtonContainer(e,t=!1){if(!Array.isArray(e))throw"Provided Buttons object is not of type Array";const i=document.createElement("div");return i.id="card-body-buttons-container",i.classList.add("dynamic-card-button-container"),t&&(i.style.justifyContent="center"),e.forEach((e=>{const t=document.createElement("button");t.onclick=e.action,t.innerHTML=e.title,t.id=e.id,t.classList.add("dynamic-card-button"),t.style.backgroundColor=e.colour.colourToString(),t.style.fontSize=e.fontSize,i.appendChild(t)})),i}},s=new h;s.title=e,s.image=t,s.colour=m.Light;var n=new Array;const r=new c;r.title="Add",r.id=e,r.colour=m.Primary,r.fontSize=u.Smaller,r.action=e=>{e.preventDefault();const t=e.target.id;this.createGameEntity(PIXI.utils.TextureCache[t])},n.push(r),s.buttons=n;let a=i.createInlineCard(s);this._entities.appendChild(a)}loadTexturesFromLocal(e){let t=e.target,i=t.files;for(let e=0;e<i.length;e++){let i=new FileReader;i.onload=()=>{const s=new Image;s.src=i.result;let n=new PIXI.BaseTexture(s.src);PIXI.Texture.addToCache(n,t.files[e].name)},i.readAsDataURL(t.files[e])}}createGame(e){let t=new a(e);t.init(this.renderer.view.width,this.renderer.view.height,"gameScene"),this.games.push(t)}deleteGame(e){}initializeStateSettings(){const e=document.getElementById("synchronize"),t=document.getElementById("save");e.addEventListener(d.MOUSE.CLICK,(e=>{e.preventDefault(),this.synchronizeGame()})),t.addEventListener(d.MOUSE.CLICK,(e=>{e.preventDefault(),this.saveGame()}))}saveGame(){const e=this.getGameState();e&&new p(this._iDBName,this._dbStoreKey).save(e).then((e=>{e&&confirm("Game Saved locally Successfully!")})).catch((e=>{alert("Game Save failed!")}))}loadGameState(){const e=new p(this._iDBName,this._dbStoreKey);e.restore(),e.result}async synchronizeGame(){const e=this.getGameState();if(console.log("Game ID: "+this._gameID.toString()),e&&this._gameID){const t=await async function(e,t,i="GET",s){const n=JSON.parse(sessionStorage.getItem("user"))?.accessToken;console.log(n);try{const s=await fetch(`https://game-engine-api.herokuapp.com/api${e}`,{method:i,body:t?JSON.stringify({...t}):null,headers:{"Content-type":"application/json; charset=UTF-8","x-access-token":n}});return await s.json()}catch(e){console.error(e)}}(`/games/${this._gameID}`,e,y.POST);t&&(console.log(t),confirm(`Game Synchronized with DB Successfully: ${this._gameID}`))}}getGameState(){const e={};return this.games[this.currentGameIndex].scenes.forEach((t=>{const i={name:t.name,height:t.height,width:t.width,gravity:t.gravity,children:[]};let s;e[t.name]=i,t.children.forEach((i=>{let n={x:i.scale._x,y:i.scale._y};s={name:i.name,type:i.type,xPosition:i.x,yPosition:i.y,mass:i.mass,acceleration:i.acceleration,texture:i._texture.textureCacheIds,scale:n,rotation:i.angle},e[t.name].children.push(s)}))})),e}createGameEntity(e=PIXI.utils.TextureCache.blueTile){const t=this.games[this.currentGameIndex].getCurrentScene(),i=this.games[this.currentGameIndex].getSceneIndex(t.name),n=this.games[this.currentGameIndex].scenes[i].children.length,r=new s(e,"untitled"+n);r.x=this.renderer.screen.width/2,r.y=this.renderer.screen.height/2,t.setSelectedEntityName(r.name),this.games[this.currentGameIndex].scenes[i].addChild(r)}playGame(){this.saveGame()}stopGame(){this.games[this.currentGameIndex].setGameMode("design")}}).init()})();