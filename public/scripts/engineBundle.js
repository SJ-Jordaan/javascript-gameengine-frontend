(()=>{"use strict";class t{constructor(t,e){this.x=t,this.y=e,this.distanceTo=this.distanceTo.bind(this)}distanceTo(t){return Math.sqrt(Math.pow(this.x-t.x,2)+Math.pow(this.y-t.y,2))}}class e extends PIXI.Sprite{constructor(e,i=0,s=0){super(e),this.setTransform(i,s),this.interactive=!0,this.buttonMode=!0,this.anchor.set(.5),this.on("pointerdown",this.onDragStart).on("pointerup",this.onDragEnd).on("pointerupoutside",this.onDragEnd).on("pointermove",this.onDragMove),this.vertexPoints={topLeft:new t(this.x,this.y),topRight:new t(this.x+this.getBounds().width,this.y),bottomLeft:new t(this.x,this.y+this.getBounds().height),bottomRight:new t(this.x+this.getBounds().width,this.y+this.getBounds().height)},this.updateVertexPoints=this.updateVertexPoints.bind(this),this.snapToEdge=this.snapToEdge.bind(this),this.snapToVertex=this.snapToVertex.bind(this),this.onDragStart=this.onDragStart.bind(this),this.onDragEnd=this.onDragEnd.bind(this),this.onDragMove=this.onDragMove.bind(this)}updateVertexPoints(){this.vertexPoints={topLeft:new t(this.x,this.y),topRight:new t(this.x+this.getBounds().width,this.y),bottomLeft:new t(this.x,this.y+this.getBounds().height),bottomRight:new t(this.x+this.getBounds().width,this.y+this.getBounds().height)}}snapToEdge(t){!0===this.parent.edgeSnap&&this.parent.children.filter((t=>t.x!==this.x&&t.y!==this.y)).forEach((e=>{Math.abs(this.getBounds().top-e.getBounds().bottom)<t&&this.x<=e.getBounds().right&&this.x>=e.getBounds().left?(this.x=e.x,this.y=e.y+e.getBounds().height):Math.abs(this.getBounds().bottom-e.getBounds().top)<t&&this.x<=e.getBounds().right&&this.x>=e.getBounds().left?(this.x=e.x,this.y+=Math.abs(this.getBounds().bottom-e.getBounds().top)):Math.abs(this.getBounds().right-e.getBounds().left)<t&&this.y<=e.getBounds().bottom&&this.y>=e.getBounds().top?(this.y=e.y,this.x+=Math.abs(this.getBounds().right-e.getBounds().left)):Math.abs(this.getBounds().left-e.getBounds().right)<t&&this.y<=e.getBounds().bottom&&this.y>=e.getBounds().top&&(this.y=e.y,this.x=e.x+e.getBounds().width)}))}snapToVertex(t){!0===this.parent.vertexSnap&&this.parent.children.filter((t=>t.x!==this.x&&t.y!==this.y)).forEach((e=>{this.vertexPoints.topLeft.distanceTo(e.vertexPoints.bottomRight)<=t?(this.x=e.x+e.getBounds().width,this.y=e.y+e.getBounds().height):this.vertexPoints.topRight.distanceTo(e.vertexPoints.bottomLeft)<=t?(this.x=e.x-this.getBounds().width,this.y=e.y+this.getBounds().height):this.vertexPoints.bottomRight.distanceTo(e.vertexPoints.topLeft)<=t?(this.x=e.x-this.getBounds().width,this.y=e.y-this.getBounds().height):this.vertexPoints.bottomLeft.distanceTo(e.vertexPoints.topRight)<=t&&(this.x=e.x+e.getBounds().width,this.y=e.y-this.getBounds().height)}))}onDragStart(t){this.data=t.data,this.alpha=.5,this.dragging=!0}onDragEnd(){this.alpha=1,this.dragging=!1,this.data=null}onDragMove(){if(this.dragging){const t=this.data.getLocalPosition(this.parent);this.x=t.x,this.y=t.y,this.updateVertexPoints(),this.snapToEdge(this.parent.snapDistance),this.snapToVertex(this.parent.snapDistance)}}}class i extends PIXI.Container{constructor(){super(),this.edgeSnap=!0,this.vertexSnap=!0,this.snapDistance=20,this.enableEdgeSnap=this.enableEdgeSnap.bind(this),this.disableEdgeSnap=this.disableEdgeSnap.bind(this),this.enableVertexSnap=this.enableVertexSnap.bind(this),this.disableVertexSnap=this.disableVertexSnap.bind(this)}enableEdgeSnap(){this.edgeSnap=!0}disableEdgeSnap(){this.edgeSnap=!1}enableVertexSnap(){this.vertexSnap=!0}disableVertexSnap(){this.vertexSnap=!1}}(new class{constructor(t=800,e=600){this.app=new PIXI.Application({width:t,height:e,backgroundColor:11184810,resolution:window.devicePixelRatio||1,autoResize:!0}),this.scene=new i(t,e),this.app.stage.addChild(this.scene),this.addTestObjects=this.addTestObjects.bind(this),this.init=this.init.bind(this),this.loadTexturesFromLocal=this.loadTexturesFromLocal.bind(this)}init(){document.getElementById("engine-view").appendChild(this.app.view),document.querySelector("#upload-button").addEventListener("change",this.loadTexturesFromLocal,!1),this.app.loader.baseUrl="/public/assets/",this.app.loader.add("blueTile","images/blueTile.png").add("brownTile","images/brownTile.png").add("blackTile","images/blackTile.png").add("greenTile","images/greenTile.png").add("yellowTile","images/yellowTile.png").add("redTile","images/redTile.png").add("whiteTile","images/whiteTile.png").add("orangeTile","images/orangeTile.png"),this.app.loader.load(this.addTestObjects)}loadTexturesFromLocal(t){let i=t.target,s=i.files;for(let t=0;t<s.length;t++){let e=new FileReader;e.onload=function(){const s=new Image;s.src=e.result;let h=new PIXI.BaseTexture(s.src);PIXI.Texture.addToCache(h,i.files[t].name)},e.readAsDataURL(i.files[t])}let h=new e(PIXI.utils.TextureCache["whiteTile.png"]);h.x=this.app.width/2,h.y=this.app.height/2,this.scene.addChild(h),this.app.render()}addTestObjects(t,i){let s=new e(i.greenTile.texture);s.x=20,s.y=20,this.scene.addChild(s);let h=new e(i.brownTile.texture);h.x=80,h.y=80,this.scene.addChild(h);let n=new e(i.blueTile.texture);n.x=120,n.y=120,this.scene.addChild(n);let a=new e(i.orangeTile.texture);a.x=240,a.y=240,this.scene.addChild(a);let o=new e(i.redTile.texture);o.x=320,o.y=320,this.scene.addChild(o);let d=new e(i.yellowTile.texture);d.x=400,d.y=400,this.scene.addChild(d);let r=new e(i.blackTile.texture);r.x=500,r.y=500,this.scene.addChild(r)}}).init()})();